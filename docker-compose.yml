services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: burty_app
    ports:
      - '5005:5005'
    depends_on:
      burty_postgres:
        condition: service_healthy
      burty_redis:
        condition: service_healthy
      burty_mongodb:
        condition: service_healthy
    restart: unless-stopped
    command: >
      sh -c "
      npm run prisma:migrate:deploy:test &&
      npm run prisma:generate:test &&
      npm run start:test
      "
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -f -H "Authorization: Bearer ${HEALTH_CHECK_TOKEN}" http://localhost:5005/api/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - burty_network

  burty_postgres:
    image: postgres:latest
    container_name: burty_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pg_data:/var/lib/postgresql/data
    command: ['postgres', '-c', 'jit=off']
    ports:
      - '5432:5432'
    restart: unless-stopped
    networks:
      - burty_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_DATABASE}']
      interval: 10s
      timeout: 5s
      retries: 5
    mem_limit: 2g
    mem_reservation: 1g

  burty_minio:
    image: minio/minio:latest
    container_name: burty_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    restart: unless-stopped
    networks:
      - burty_network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -f http://localhost:9000/minio/health/live || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  burty_redis:
    image: redis:latest
    container_name: burty_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - burty_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  burty_mongodb:
    image: mongo:latest
    container_name: burty_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - '27017:27017'
    expose:
      - '27017'
    volumes:
      - mongodb_data:/data
    networks:
      - burty_network
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', 'db.adminCommand("ping").ok']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  pg_data:
  minio_data:
  redis_data:
  mongodb_data:

networks:
  burty_network:
    external: true
