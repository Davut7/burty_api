{
  "name": "burty",
  "version": "0.0.1",
  "description": "",
  "author": "github.com/Davut7",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prisma:generate:prod": "dotenv -e .production.env -- prisma generate  --schema ./src/utils/prisma/schema",
    "prisma:migrate:prod": "dotenv -e .production.env -- prisma migrate dev --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:migrate:deploy:prod": "dotenv -e .production.env -- prisma migrate deploy --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:generate:test": "npx dotenv -e .test.env -- prisma generate  --schema ./src/utils/prisma/schema",
    "prisma:migrate:test": "npx dotenv -e .test.env -- prisma migrate dev --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:migrate:deploy:test": "npx dotenv -e .test.env -- prisma migrate deploy --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:generate:dev": "dotenv -e .development.env -- prisma generate --schema ./src/utils/prisma/schema",
    "prisma:format:dev": "dotenv -e .development.env -- prisma format --schema ./src/utils/prisma/schema",
    "prisma:migrate:dev": "dotenv -e .development.env -- prisma migrate dev --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:migrate:deploy": "dotenv -e .development.env -- prisma migrate deploy --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:migrate:reset": "dotenv -e .development.env -- prisma migrate reset --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:migrate:dev:create": "dotenv -e .development.env -- prisma migrate dev --create-only --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:migrate:dev:deploy": "dotenv -e .development.env -- prisma migrate dev --preview-feature --schema ./src/utils/prisma/schema",
    "prisma:migrate:dev:reset": "dotenv -e .development.env -- prisma migrate reset --preview-feature --schema ./src/utils/prisma/schema",
    "update": "npx npm-check --update",
    "seed:test": "cross-env NODE_ENV=test tsc && dotenv -e .test.env --  node dist/helpers/seeds/seed.js",
    "seed:dev": "cross-env NODE_ENV=dev tsc && dotenv -e .development.env --  node dist/helpers/seeds/seed.js",
    "seed:prod": "cross-env NODE_ENV=prod tsc && dotenv -e .prod.env --  node dist/helpers/seeds/seed.js",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "cross-env NODE_ENV=production dotenv -e .production.env -- nest start",
    "start:dev": "cross-env NODE_ENV=development dotenv -e .development.env -- concurrently \"tsc -w\" \"nest start --watch\"",
    "start:test": "cross-env NODE_ENV=test dotenv -e .test.env nest start",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "cross-env NODE_ENV=test jest --config ./test/jest-e2e.json --watchAll --detectOpenHandles --maxWorkers=6 -- --verbose"
  },
  "dependencies": {
    "@faker-js/faker": "^9.3.0",
    "@fastify/cookie": "^9.4.0",
    "@fastify/csrf-protection": "^6.4.1",
    "@fastify/helmet": "^11.1.1",
    "@fastify/multipart": "^8.3.0",
    "@nest-lab/throttler-storage-redis": "^1.0.0",
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/axios": "^3.1.3",
    "@nestjs/cache-manager": "^2.2.2",
    "@nestjs/common": "^10.4.15",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.4.15",
    "@nestjs/mapped-types": "^2.0.6",
    "@nestjs/mongoose": "^10.1.0",
    "@nestjs/platform-fastify": "^10.4.15",
    "@nestjs/schedule": "^4.1.2",
    "@nestjs/swagger": "^8.1.0",
    "@nestjs/terminus": "^10.2.3",
    "@nestjs/throttler": "^6.3.0",
    "@prisma/client": "^6.1.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "argon2": "^0.41.1",
    "axios": "^1.7.9",
    "cache-manager": "^5.7.6",
    "cache-manager-redis-store": "^3.0.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "compression": "^1.7.5",
    "cross-env": "^7.0.3",
    "date-fns": "^4.1.0",
    "dotenv": "^16.4.7",
    "dotenv-cli": "^8.0.0",
    "fastify-file-interceptor": "^1.0.9",
    "googleapis": "^144.0.0",
    "ioredis": "^5.4.2",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "minio": "^8.0.3",
    "mongoose": "^8.9.2",
    "multer": "^1.4.5-lts.1",
    "nestjs-throttler-storage-redis": "^0.5.1",
    "qrcode": "^1.5.4",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "stripe": "^17.5.0",
    "ts-morph": "^24.0.0",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "winston-mongodb": "^6.0.0"
  },
  "devDependencies": {
    "@golevelup/ts-jest": "^0.6.1",
    "@nestjs/cli": "^10.4.9",
    "@nestjs/schematics": "^10.2.3",
    "@nestjs/testing": "^10.4.15",
    "@swc/cli": "^0.5.2",
    "@types/cache-manager-redis-store": "^2.0.4",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.8",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/multer": "^1.4.12",
    "@types/node": "^22.10.2",
    "@types/supertest": "^6.0.2",
    "concurrently": "^9.1.0",
    "eslint": "8.42",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "fastify": "^4.28.1",
    "jest": "^29.7.0",
    "prettier": "^3.3.3",
    "prisma": "^6.1.0",
    "run-script-webpack-plugin": "^0.2.0",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "swagger-themes": "^1.4.3",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.5.4",
    "webpack": "^5.94.0",
    "webpack-node-externals": "^3.0.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "moduleDirectories": [
      "node_modules",
      "src"
    ],
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
